<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<title>I‚Äôm sorry ü©∑</title>
<meta name="description" content="A tiny, cute website to say sorry." />
<style>
  :root{
    --bg: #fff7fb;
    --bg-2:#ffeefd;
    --ink:#3a2b35;
    --sub:#6b5862;
    --accent:#ff79b0;
    --accent-2:#ffd1e6;
    --pill:#fff;
    --ok:#5dd39e;
    --no:#ff8fab;
    --ring:#ffb3d6;
  }
  *{box-sizing:border-box}
  html,body{height:100%}
  body{
    margin:0;
    font-family: ui-rounded, system-ui, -apple-system, Segoe UI, Roboto, "SF Pro Rounded", "Nunito", "Poppins", sans-serif;
    color:var(--ink);
    background:
      radial-gradient(1200px 600px at 10% -10%, var(--bg-2), transparent 60%),
      radial-gradient(1000px 800px at 110% 10%, #fff0fa, transparent 50%),
      var(--bg);
    display:grid;
    place-items:center;
    overflow-x:hidden;
  }

  .card{
    width:min(720px, 92vw);
    background:rgba(255,255,255,0.8);
    backdrop-filter: blur(10px);
    border:2px solid var(--accent-2);
    border-radius:28px;
    padding:28px;
    position:relative;
    box-shadow: 0 12px 40px rgba(255, 143, 171, 0.25);
  }

  h1{
    margin:6px 0 4px;
    font-weight:800;
    font-size: clamp(28px, 5vw, 42px);
    letter-spacing: .5px;
  }
  .sub{
    margin:0 0 16px;
    color:var(--sub);
    font-size:clamp(14px, 2.8vw, 16px);
  }

  .type{
    min-height: 3lh;
    line-height: 1.65;
    font-size:clamp(16px, 3.6vw, 18px);
    background: var(--pill);
    border:1px dashed var(--accent-2);
    border-radius:18px;
    padding:14px 16px;
  }
  .type b{color:#d83b7d}

  .buttons{
    margin:16px 0 6px;
    display:flex;
    gap:12px;
    flex-wrap:wrap;
  }
  button{
    appearance:none;
    cursor:pointer;
    border:none;
    padding:14px 18px;
    border-radius:999px;
    font-weight:800;
    font-size:16px;
    transition: transform .12s ease, box-shadow .2s ease;
    will-change: transform;
  }
  .yes{
    background:linear-gradient(180deg, #ff94c2, #ff6fa8);
    color:#fff;
    box-shadow:0 10px 24px rgba(255, 132, 176, .45);
  }
  .yes:active{ transform: translateY(2px) scale(.98); }
  .no{
    background: #fff;
    color: #a01848;
    border:2px solid var(--no);
  }

  .footer{
    margin-top:12px;
    font-size:12px;
    color:var(--sub);
    display:flex; align-items:center; gap:8px; flex-wrap:wrap;
  }
  .tag{padding:6px 10px; border:1px solid var(--accent-2); border-radius:999px; background:#fff;}
  .small{opacity:.85}

  /* Floating hearts backdrop */
  .hearts{
    position:fixed; inset:0; pointer-events:none; z-index:-1;
  }
  .heart{position:absolute; font-size:22px; opacity:.85; filter: drop-shadow(0 2px 2px rgba(0,0,0,.06));}
  @keyframes floatUp {
    0% { transform: translateY(0) translateX(0) rotate(0deg); opacity:0; }
    8% { opacity: .9; }
    100% { transform: translateY(-120vh) translateX(var(--drift, 0px)) rotate(360deg); opacity:0; }
  }

  /* Ring progress (hold-to-forgive) */
  .hold{
    position:relative; isolation:isolate;
  }
  .ring{
    position:absolute; inset:-6px; border-radius:999px;
    border:4px solid var(--ring);
    mask: radial-gradient(circle at center, transparent 55%, black 56%);
    pointer-events:none;
    opacity:.0; transition: opacity .2s ease;
  }
  .yes.holding + .ring{ opacity:1; }
  .confetti{ position: fixed; inset:0; pointer-events:none; }

  /* Motion sensitivity */
  @media (prefers-reduced-motion: reduce){
    .heart{display:none}
    .yes, .no { transition:none }
    .ring{ display:none }
  }

  /* ‚ÄúNo‚Äù runs away */
  .no.runaway{ position:relative }
</style>
</head>
<body>
  <div class="hearts" aria-hidden="true"></div>

  <main class="card" role="main">
    <h1 id="title">I‚Äôm sorry, <span id="her-name">Sayang</span> ü©∑</h1>
    <p class="sub" id="fromline">from <b id="from-name">Me</b> ‚Ä¢ today</p>

    <div class="type" id="typebox" aria-live="polite"></div>

    <div class="buttons">
      <button class="yes hold" id="yesBtn" aria-label="Forgive me">Forgive me ü•∫</button>
      <div class="ring" id="ring" aria-hidden="true"></div>
      <button class="no runaway" id="noBtn" aria-label="Not yet">Not yet üôà</button>
    </div>

    <div class="footer">
      <span class="tag" id="counterTag">0 apologies sent</span>
      <button id="copyBtn" class="tag" aria-label="Copy link">Copy this page link</button>
      <span class="small">Tip: add <code>?name=Zafeera&from=Syahril&lang=bm</code> to personalize.</span>
    </div>
    <canvas class="confetti" id="confetti"></canvas>
  </main>

<script>
/* ========== Personalization ========== */
// You can edit these defaults:
let SETTINGS = {
  name: "Zafeera",
  from: "Syahril",
  lang: "mix" // "en" | "bm" | "mix"
};
// ‚Ä¶or override via URL: ?name=Zafeera&from=Syahril&lang=bm
const params = new URLSearchParams(location.search);
if(params.has("name")) SETTINGS.name = params.get("name");
if(params.has("from")) SETTINGS.from = params.get("from");
if(params.has("lang")) SETTINGS.lang = params.get("lang");

document.getElementById("her-name").textContent = SETTINGS.name || "Sayang";
document.getElementById("from-name").textContent = SETTINGS.from || "Me";
document.title = `I‚Äôm sorry, ${SETTINGS.name} ü©∑`;

const phrases = {
  en: [
    `I‚Äôm really sorry, ${SETTINGS.name}.`,
    `I didn‚Äôt mean to hurt you.`,
    `You mean the world to me.`,
    `Please forgive me, my love.`,
    `Let me make it up to you.`,
    `I love you so much.`
  ],
  bm: [
    `Saya betul-betul minta maaf, ${SETTINGS.name}.`,
    `Saya tak berniat lukakan hati awak.`,
    `Awak sangat bermakna untuk saya.`,
    `Maafkan saya, sayang.`,
    `Izinkan saya tebus kesilapan ini.`,
    `Saya sayang awak sangat-sangat.`
  ]
};
const mix = [];
phrases.en.forEach((_,i)=>{ mix.push(phrases.en[i]); mix.push(phrases.bm[i]); });
const LINES = SETTINGS.lang==="en" ? phrases.en
            : SETTINGS.lang==="bm" ? phrases.bm
            : mix;

/* ========== Typewriter ========== */
const box = document.getElementById('typebox');
let idx = 0, printed = 0;
function typeLine(){
  const line = LINES[idx % LINES.length];
  box.innerHTML = ""; // clear
  typeText(line, 0, () => {
    printed++;
    document.getElementById('counterTag').textContent =
      `${printed} ${printed===1?"apology":"apologies"} sent`;
    setTimeout(()=>typeLine(), 900);
  });
}
function typeText(text, i, done){
  if (window.matchMedia('(prefers-reduced-motion: reduce)').matches){
    box.textContent = text;
    done && done();
    return;
  }
  if(i <= text.length){
    box.innerHTML = `${text.slice(0,i)}<b>|</b>`;
    setTimeout(()=>typeText(text, i+1, done), 24);
  }else{
    box.textContent = text;
    done && done();
  }
}
typeLine();

/* ========== Floating hearts generator ========== */
const heartsLayer = document.querySelector('.hearts');
function spawnHeart(){
  if (document.hidden) return; // save resources
  if (window.matchMedia('(prefers-reduced-motion: reduce)').matches) return;

  const h = document.createElement('div');
  h.className = 'heart';
  h.textContent = Math.random() < .3 ? 'üíê' : 'ü©∑';
  const size = 16 + Math.random()*22;
  h.style.left = Math.random()*100 + 'vw';
  h.style.bottom = '-24px';
  h.style.fontSize = size + 'px';
  h.style.setProperty('--drift', (Math.random()*80-40)+'px');
  const dur = 9 + Math.random()*6;
  h.style.animation = `floatUp ${dur}s linear`;
  heartsLayer.appendChild(h);
  setTimeout(()=> h.remove(), (dur*1000)+100);
}
setInterval(spawnHeart, 450);

/* ========== ‚ÄúNo‚Äù button runs away ========== */
const noBtn = document.getElementById('noBtn');
noBtn.addEventListener('pointerenter', runaway);
noBtn.addEventListener('pointerdown', runaway);
function runaway(){
  const rect = noBtn.getBoundingClientRect();
  const pad = 16;
  const x = Math.random()*(window.innerWidth - rect.width - pad*2) + pad;
  const y = Math.random()*(window.innerHeight - rect.height - pad*2) + pad;
  noBtn.style.position = 'fixed';
  noBtn.style.left = x+'px';
  noBtn.style.top = y+'px';
}

/* ========== YES: hold to forgive + confetti/flowers ========== */
const yesBtn = document.getElementById('yesBtn');
const ring = document.getElementById('ring');
let holdTimer, held=false;

yesBtn.addEventListener('pointerdown', e=>{
  e.preventDefault();
  yesBtn.classList.add('holding');
  startRing();
  holdTimer = setTimeout(()=>{
    held = true;
    celebrate();
  }, 1100); // hold ~1.1s to confirm
});
['pointerup','pointerleave','pointercancel'].forEach(t=>{
  yesBtn.addEventListener(t, ()=>{
    yesBtn.classList.remove('holding');
    ring.style.setProperty('--p', 0);
    clearTimeout(holdTimer);
  });
});

function startRing(){
  let p=0;
  const tick = ()=>{
    p = Math.min(1, p + .03);
    ring.style.background =
      `conic-gradient(var(--ring) ${p*360}deg, transparent ${p*360}deg)`;
    ring.style.setProperty('--p', p);
    if(yesBtn.classList.contains('holding') && p<1) requestAnimationFrame(tick);
  };
  tick();
}

/* Confetti (flower & hearts) */
const confetti = document.getElementById('confetti');
const ctx = confetti.getContext('2d');
function resize(){ confetti.width = innerWidth; confetti.height = innerHeight; }
resize(); addEventListener('resize', resize);
let pieces=[];
function celebrate(){
  for(let i=0;i<180;i++){
    pieces.push({
      x: Math.random()*confetti.width,
      y: -20,
      vx: (Math.random()*2-1)*2,
      vy: 2+Math.random()*3,
      rot: Math.random()*Math.PI*2,
      vr: (Math.random()*.1 - .05),
      t: Math.random()<.55?'ü©∑':'üíÆ',
      s: 18+Math.random()*18,
      life: 0
    });
  }
  animateConfetti();
  // also change title line to ‚ÄúForgiven!‚Äù
  document.getElementById('title').innerHTML = `Thank you, <span id="her-name-2">${SETTINGS.name}</span> ü©∑`;
  box.textContent = `I promise to do better. Terima kasih sebab maafkan saya.`;
}
let running=false;
function animateConfetti(){
  if(running) return; running=true;
  const step = ()=>{
    ctx.clearRect(0,0,confetti.width,confetti.height);
    pieces.forEach(p=>{
      p.x += p.vx; p.y += p.vy; p.rot += p.vr; p.life+=1;
      ctx.save();
      ctx.translate(p.x, p.y);
      ctx.rotate(p.rot);
      ctx.font = `${p.s}px serif`;
      ctx.globalAlpha = Math.max(0, 1 - p.life/240);
      ctx.fillText(p.t, 0, 0);
      ctx.restore();
    });
    pieces = pieces.filter(p => p.life < 240);
    if(pieces.length>0) requestAnimationFrame(step); else running=false;
  };
  requestAnimationFrame(step);
}

/* ========== Copy link ========== */
document.getElementById('copyBtn').addEventListener('click', async ()=>{
  const base = location.origin+location.pathname;
  const url = `${base}?name=${encodeURIComponent(SETTINGS.name)}&from=${encodeURIComponent(SETTINGS.from)}&lang=${encodeURIComponent(SETTINGS.lang)}`;
  try{
    await navigator.clipboard.writeText(url);
    event.target.textContent = 'Link copied ‚úÖ';
    setTimeout(()=> event.target.textContent='Copy this page link', 1600);
  }catch{
    prompt('Copy this URL:', url);
  }
});

/* ========== Friendly date ========== */
document.getElementById('fromline').innerHTML =
  `from <b id="from-name">${SETTINGS.from}</b> ‚Ä¢ ${new Date().toLocaleDateString(undefined,{weekday:'short', month:'short', day:'numeric'})}`;

/* ========== Safety: stop hearts when hidden ========== */
document.addEventListener('visibilitychange', ()=>{
  // nothing needed here besides spawn guard in spawnHeart()
});
</script>
</body>
</html>